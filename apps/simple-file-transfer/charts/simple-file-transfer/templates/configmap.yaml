apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-file-transfer-index
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Simple File Transfer</title>
    </head>
    <body>
        <h1>Simple File Transfer Service</h1>
        <p>Welcome to Simple File Transfer Service</p>
        <p>This service is running and ready to handle file uploads and downloads</p>
        
        <h2>Download</h2>
          <p><a href="/share">View Files</a></p>
      
        <h2>Upload Example:</h3>
           <textarea readonly rows="2" cols="80">curl -F "file=@filename.txt" http://192.168.50.10:30123/upload</textarea>
    </body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-file-transfer-script
data:
  webserver.py: |
    from flask import Flask, send_from_directory, render_template_string, request
    import os

    app = Flask(__name__)
    SHARE_DIR = '/share'

    @app.route('/')
    def list():
        files = os.listdir(SHARE_DIR)
        html = """
        <h2>Files (/share)</h2>
        <ul>
        {% for file in files %}
          <li><a href="/share/{{`{{ file }}`}}">{{`{{ file }}`}}</a></li>
        {% endfor %}
        </ul>
        """
        return render_template_string(html, files=files)

    @app.route('/share/<path:filename>')
    def download(filename):
        return send_from_directory(SHARE_DIR, filename, as_attachment=True)

    @app.route('/upload', methods=['POST'])
    def upload():
        try:
            # Check if it's a traditional file upload
            if 'file' in request.files:
                file = request.files['file']
                if file.filename == '':
                    return 'No file selected', 400
                file.save(os.path.join(SHARE_DIR, file.filename))
                return 'File uploaded successfully!', 200
            
            # Check if it's HTMX form data
            elif 'filename' in request.form and 'content' in request.form:
                filename = request.form['filename']
                content = request.form['content']
                
                if not filename:
                    return 'Filename is required', 400
                
                if not content:
                    return 'Content cannot be empty', 400
                
                # Write content to file
                filepath = os.path.join(SHARE_DIR, filename)
                with open(filepath, 'w') as f:
                    f.write(content)
                
                return f'File "{filename}" created successfully!', 200
            
            else:
                return 'No valid data provided. Expected either file upload or filename/content form data.', 400
                
        except Exception as e:
            return f'Error: {str(e)}', 500

    if __name__ == '__main__':
        os.makedirs(SHARE_DIR, exist_ok=True)
        app.run(host='0.0.0.0', port=8080)
 